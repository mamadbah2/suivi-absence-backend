package sn.dev.suiviabsence.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.stereotype.Component;
import sn.dev.suiviabsence.service.MockDataService;

/**
 * Initialise automatiquement les donn√©es mock au d√©marrage de l'application
 * Activ√© seulement si la propri√©t√© mock.data.auto-init=true
 */
@Component
@ConditionalOnProperty(
        value = "mock.data.auto-init",
        havingValue = "true",
        matchIfMissing = false
)
public class DataLoader implements CommandLineRunner {

    @Autowired
    private MockDataService mockDataService;

    @Override
    public void run(String... args) throws Exception {
        System.out.println("üöÄ Initialisation automatique des donn√©es mock...");

        try {
            // V√©rifier si des donn√©es existent d√©j√†
            long totalRecords = mockDataService.countTotalRecords();

            if (totalRecords == 0) {
                mockDataService.initializeMockData();
                System.out.println("‚úÖ Donn√©es mock initialis√©es avec succ√®s!");
                mockDataService.printStatistics();
            } else {
                System.out.println("‚ÑπÔ∏è  Donn√©es d√©j√† pr√©sentes (" + totalRecords + " enregistrements)");
            }

        } catch (Exception e) {
            System.err.println("‚ùå Erreur lors de l'initialisation des donn√©es mock: " + e.getMessage());
        }
    }
}